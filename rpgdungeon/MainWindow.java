/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.arisinwonderland.rpgdungeon;

import javax.swing.text.*;

import java.util.List;
import java.util.ArrayList;

/**
 *
 * @author Aris Yu
 */
public class MainWindow extends javax.swing.JFrame {
    
    private int allyPos;
    private int enemyPos;
    
    private CharacterStatus activeAlly;
    private CharacterStatus activeEnemy;
    
    private Combat currentCombat;
    private List<javax.swing.JButton> allyButtons;
    private List<javax.swing.JButton> enemyButtons;

    /**
     * Creates new form Main
     */
    public MainWindow() {
        initComponents();
        
        console.setText("> ");
        
        allyButtons = new ArrayList<>();
        enemyButtons = new ArrayList<>();
        
        allyButtons.add(allyAbility0);
        allyButtons.add(allyAbility1);
        allyButtons.add(allyAbility2);
        allyButtons.add(allyAbility3);
        
        enemyButtons.add(enemyAbility0);
        enemyButtons.add(enemyAbility1);
        enemyButtons.add(enemyAbility2);
        enemyButtons.add(enemyAbility3);
    }
    
    public void writeToConsole(String s) {
        writeToConsole(s, true);
    }
    
    public void writeToConsole(String s, boolean newLine) {
        try {
           Document doc = console.getDocument();
           doc.insertString(doc.getLength(), s, null);
           if (newLine) {
               doc.insertString(doc.getLength(), "\n> ", null);
           }
        } catch(BadLocationException exc) {
           exc.printStackTrace();
        }
    }
    

    public Combat getCurrentCombat() {
        return currentCombat;
    }

    public void setCurrentCombat(Combat currentCombat) {
        this.currentCombat = currentCombat;
        
        allyPos = 0;
        enemyPos = 0;
        
        updateView();
    }
    
    public void updateView() {
        activeAlly = currentCombat.getAlly(allyPos);
        activeEnemy = currentCombat.getEnemy(enemyPos);
        
        if (activeAlly == null) {
            activeAlly = new CharacterStatus();
        }
        if (activeEnemy == null) {
            activeEnemy = new CharacterStatus();
        }
        
        String[] allyList = currentCombat.getAllyList().toArray(new String[0]);
        String[] enemyList = currentCombat.getEnemyList().toArray(new String[0]);
        
        javax.swing.DefaultComboBoxModel<String> allyModel = new javax.swing.DefaultComboBoxModel<>(allyList);
        allySelect.setModel(allyModel);
        
        if (allyList.length != 0) {
            allySelect.setSelectedIndex(allyPos);
        }
        
        javax.swing.DefaultComboBoxModel<String> enemyModel = new javax.swing.DefaultComboBoxModel<>(enemyList);
        enemySelect.setModel(enemyModel);
        
        if (enemyList.length != 0) {
            enemySelect.setSelectedIndex(enemyPos);
        }
        
        allyHPLabel.setText("HP: " + activeAlly.getHP() + "/" + activeAlly.getMaxHP());
        enemyHPLabel.setText("HP: " + activeEnemy.getHP() + "/" + activeEnemy.getMaxHP());
        
        allyHPBar.setMaximum(activeAlly.getMaxHP());
        allyHPBar.setValue(activeAlly.getHP());
        enemyHPBar.setMaximum(activeEnemy.getMaxHP());
        enemyHPBar.setValue(activeEnemy.getHP());
        
        for (int i = 0; i < 4; i++) {
            Ability ab = activeAlly.getAbility(i);
            
            if (ab != null) {
                allyButtons.get(i).setText(ab.getName());
                allyButtons.get(i).setEnabled(true);
            } else {
                allyButtons.get(i).setText("—");
                allyButtons.get(i).setEnabled(false);
            }
        }
        
        for (int i = 0; i < 4; i++) {
            Ability ab = activeEnemy.getAbility(i);
            
            if (ab != null) {
                enemyButtons.get(i).setText(ab.getName());
                enemyButtons.get(i).setEnabled(true);
            } else {
                enemyButtons.get(i).setText("—");
                enemyButtons.get(i).setEnabled(false);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        separator = new javax.swing.JSeparator();
        allyHPBar = new javax.swing.JProgressBar();
        allyHPLabel = new javax.swing.JLabel();
        enemyHPLabel = new javax.swing.JLabel();
        enemyHPBar = new javax.swing.JProgressBar();
        allyAbility0 = new javax.swing.JButton();
        allyAbility1 = new javax.swing.JButton();
        allyAbility2 = new javax.swing.JButton();
        allyAbility3 = new javax.swing.JButton();
        enemyAbility0 = new javax.swing.JButton();
        enemyAbility1 = new javax.swing.JButton();
        enemyAbility2 = new javax.swing.JButton();
        enemyAbility3 = new javax.swing.JButton();
        allyAdd = new javax.swing.JButton();
        enemyAdd = new javax.swing.JButton();
        allySelect = new javax.swing.JComboBox<>();
        enemySelect = new javax.swing.JComboBox<>();
        logPanel = new javax.swing.JScrollPane();
        console = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 300));

        jSplitPane.setDividerLocation(225);
        jSplitPane.setMinimumSize(new java.awt.Dimension(450, 22));
        jSplitPane.setPreferredSize(new java.awt.Dimension(450, 350));

        allyHPLabel.setText("HP: 0/0");

        enemyHPLabel.setText("HP: 0/0");

        allyAbility0.setText("Ability 1");
        allyAbility0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility0Selected(evt);
            }
        });

        allyAbility1.setText("Ability 2");
        allyAbility1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility1Selected(evt);
            }
        });

        allyAbility2.setText("Ability 3");
        allyAbility2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility2Selected(evt);
            }
        });

        allyAbility3.setText("Ability 4");
        allyAbility3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility3Selected(evt);
            }
        });

        enemyAbility0.setText("Ability 1");
        enemyAbility0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility0Selected(evt);
            }
        });

        enemyAbility1.setText("Ability 2");
        enemyAbility1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility1Selected(evt);
            }
        });

        enemyAbility2.setText("Ability 3");
        enemyAbility2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility2Selected(evt);
            }
        });

        enemyAbility3.setText("Ability 4");
        enemyAbility3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility3Selected(evt);
            }
        });

        allyAdd.setText("Add");
        allyAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAddActionPerformed(evt);
            }
        });

        enemyAdd.setText("Add");
        enemyAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAddActionPerformed(evt);
            }
        });

        allySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allySelectActionPerformed(evt);
            }
        });

        enemySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemySelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separator)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enemyHPLabel)
                            .addComponent(enemySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(allyHPBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enemyHPBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(allyAbility0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(allyAbility1))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(allyAbility2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allyAbility3))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(enemyAbility0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyAbility1))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(enemyAbility2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyAbility3))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allyHPLabel)
                            .addComponent(allySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allyAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(allyHPLabel))
                    .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(allyAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(allySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allyHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allyAbility0)
                    .addComponent(allyAbility1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allyAbility2)
                    .addComponent(allyAbility3))
                .addGap(15, 15, 15)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(enemySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enemyHPLabel))
                    .addComponent(enemyAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyAbility0)
                    .addComponent(enemyAbility1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyAbility2)
                    .addComponent(enemyAbility3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane.setLeftComponent(controlPanel);

        logPanel.setViewportView(console);

        jSplitPane.setRightComponent(logPanel);

        getContentPane().add(jSplitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allyAbility0Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility0Selected
        writeToConsole(activeAlly.useAbility(0, activeEnemy));
        updateView();
    }//GEN-LAST:event_allyAbility0Selected

    private void allyAbility1Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility1Selected
        writeToConsole(activeAlly.useAbility(1, activeEnemy));
        updateView();
    }//GEN-LAST:event_allyAbility1Selected

    private void allyAbility2Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility2Selected
        writeToConsole(activeAlly.useAbility(2, activeEnemy));
        updateView();
    }//GEN-LAST:event_allyAbility2Selected

    private void allyAbility3Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility3Selected
        writeToConsole(activeAlly.useAbility(3, activeEnemy));
        updateView();
    }//GEN-LAST:event_allyAbility3Selected

    private void enemyAbility0Selected(java.awt.event.ActionEvent evt) {                                              
        writeToConsole(activeEnemy.useAbility(0, activeAlly));
        updateView();
    }                                                                                       

    private void enemyAbility1Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility1Selected
        writeToConsole(activeEnemy.useAbility(1, activeAlly));
        updateView();
    }//GEN-LAST:event_enemyAbility1Selected

    private void enemyAbility2Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility2Selected
        writeToConsole(activeEnemy.useAbility(2, activeAlly));
        updateView();
    }//GEN-LAST:event_enemyAbility2Selected

    private void enemyAbility3Selected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility3Selected
        writeToConsole(activeEnemy.useAbility(3, activeAlly));
        updateView();
    }//GEN-LAST:event_enemyAbility3Selected

    private void allyAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAddActionPerformed
        Bestiary bestiary = Bestiary.getInstance();
        Object[] names = bestiary.list().toArray();
        String s = (String) javax.swing.JOptionPane.showInputDialog(
            this,
            "Select a unit to add:",
            "Add Unit",
            javax.swing.JOptionPane.PLAIN_MESSAGE,
            null,
            names,
            names[0]);
        
        if (s != null) {
            activeAlly = currentCombat.addAlly(s);
            allyPos = currentCombat.getAllyCount() - 1;
            updateView();
        }
    }//GEN-LAST:event_allyAddActionPerformed

    private void enemyAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAddActionPerformed
        Bestiary bestiary = Bestiary.getInstance();
        Object[] names = bestiary.list().toArray();
        String s = (String) javax.swing.JOptionPane.showInputDialog(
            this,
            "Select a unit to add:",
            "Add Unit",
            javax.swing.JOptionPane.PLAIN_MESSAGE,
            null,
            names,
            names[0]);
        
        if (s != null) {
            activeEnemy = currentCombat.addEnemy(s);
            enemyPos = currentCombat.getEnemyCount() - 1;
            updateView();
        }
    }//GEN-LAST:event_enemyAddActionPerformed

    private void allySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allySelectActionPerformed
        allyPos = allySelect.getSelectedIndex();
        updateView();
    }//GEN-LAST:event_allySelectActionPerformed

    private void enemySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemySelectActionPerformed
        enemyPos = enemySelect.getSelectedIndex();
        updateView();
    }//GEN-LAST:event_enemySelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allyAbility0;
    private javax.swing.JButton allyAbility1;
    private javax.swing.JButton allyAbility2;
    private javax.swing.JButton allyAbility3;
    private javax.swing.JButton allyAdd;
    private javax.swing.JProgressBar allyHPBar;
    private javax.swing.JLabel allyHPLabel;
    private javax.swing.JComboBox<String> allySelect;
    private javax.swing.JTextPane console;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton enemyAbility0;
    private javax.swing.JButton enemyAbility1;
    private javax.swing.JButton enemyAbility2;
    private javax.swing.JButton enemyAbility3;
    private javax.swing.JButton enemyAdd;
    private javax.swing.JProgressBar enemyHPBar;
    private javax.swing.JLabel enemyHPLabel;
    private javax.swing.JComboBox<String> enemySelect;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JScrollPane logPanel;
    private javax.swing.JSeparator separator;
    // End of variables declaration//GEN-END:variables
}
