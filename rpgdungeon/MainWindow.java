/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.arisinwonderland.rpgdungeon;

import javax.swing.text.*;

import java.util.List;
import java.util.ArrayList;

/**
 *
 * @author Aris Yu
 */
public class MainWindow extends javax.swing.JFrame {
    
    private int allyPos;
    private int enemyPos;
    
    private CharacterStatus activeAlly;
    private CharacterStatus activeEnemy;
    
    private Combat currentCombat;
    private List<javax.swing.JButton> allyButtons;
    private List<javax.swing.JButton> enemyButtons;

    /**
     * Creates new form Main
     */
    public MainWindow() {
        initComponents();
        
        Console.setText("> ");
        
        allyButtons = new ArrayList<>();
        enemyButtons = new ArrayList<>();
        
        allyButtons.add(allyAbility0);
        allyButtons.add(allyAbility1);
        allyButtons.add(allyAbility2);
        allyButtons.add(allyAbility3);
        
        enemyButtons.add(enemyAbility0);
        enemyButtons.add(enemyAbility1);
        enemyButtons.add(enemyAbility2);
        enemyButtons.add(enemyAbility3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        allyName = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        enemyName = new javax.swing.JLabel();
        allyHPBar = new javax.swing.JProgressBar();
        allyHPLabel = new javax.swing.JLabel();
        enemyHPLabel = new javax.swing.JLabel();
        enemyHPBar = new javax.swing.JProgressBar();
        allyAbility0 = new javax.swing.JButton();
        allyAbility1 = new javax.swing.JButton();
        allyAbility2 = new javax.swing.JButton();
        allyAbility3 = new javax.swing.JButton();
        enemyAbility0 = new javax.swing.JButton();
        enemyAbility1 = new javax.swing.JButton();
        enemyAbility2 = new javax.swing.JButton();
        enemyAbility3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Console = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 300));

        jSplitPane1.setDividerLocation(200);

        allyName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        allyName.setText("Ally Name");

        enemyName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        enemyName.setText("Enemy Name");

        allyHPLabel.setText("HP: 0/0");

        enemyHPLabel.setText("HP: 0/0");

        allyAbility0.setText("Ability 1");
        allyAbility0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility0ActionPerformed(evt);
            }
        });

        allyAbility1.setText("Ability 2");
        allyAbility1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility1ActionPerformed(evt);
            }
        });

        allyAbility2.setText("Ability 3");
        allyAbility2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility2ActionPerformed(evt);
            }
        });

        allyAbility3.setText("Ability 4");
        allyAbility3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allyAbility3ActionPerformed(evt);
            }
        });

        enemyAbility0.setText("Ability 1");
        enemyAbility0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility0ActionPerformed(evt);
            }
        });

        enemyAbility1.setText("Ability 2");
        enemyAbility1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility1ActionPerformed(evt);
            }
        });

        enemyAbility2.setText("Ability 3");
        enemyAbility2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility2ActionPerformed(evt);
            }
        });

        enemyAbility3.setText("Ability 4");
        enemyAbility3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyAbility3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allyHPBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enemyHPBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(allyAbility0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allyAbility1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enemyName)
                            .addComponent(allyName)
                            .addComponent(allyHPLabel)
                            .addComponent(enemyHPLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(allyAbility2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allyAbility3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(enemyAbility0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyAbility1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(enemyAbility2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyAbility3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allyName)
                .addGap(5, 5, 5)
                .addComponent(allyHPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allyHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allyAbility0)
                    .addComponent(allyAbility1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allyAbility2)
                    .addComponent(allyAbility3))
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyHPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemyHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyAbility0)
                    .addComponent(enemyAbility1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyAbility2)
                    .addComponent(enemyAbility3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jScrollPane2.setViewportView(Console);

        jSplitPane1.setRightComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allyAbility0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility0ActionPerformed
        writeToConsole(activeAlly.useAbility(0, activeEnemy));
        updateView();
    }//GEN-LAST:event_allyAbility0ActionPerformed

    private void allyAbility1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allyAbility1ActionPerformed

    private void allyAbility2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allyAbility2ActionPerformed

    private void allyAbility3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allyAbility3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allyAbility3ActionPerformed

    private void enemyAbility0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility0ActionPerformed
        writeToConsole(activeEnemy.useAbility(0, activeAlly));
        updateView();
    }//GEN-LAST:event_enemyAbility0ActionPerformed                                          

    private void enemyAbility1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enemyAbility1ActionPerformed

    private void enemyAbility2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enemyAbility2ActionPerformed

    private void enemyAbility3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyAbility3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enemyAbility3ActionPerformed
    
    public void writeToConsole(String s) {
        writeToConsole(s, true);
    }
    
    public void writeToConsole(String s, boolean newLine) {
        try {
           Document doc = Console.getDocument();
           doc.insertString(doc.getLength(), s, null);
           if (newLine) {
               doc.insertString(doc.getLength(), "\n> ", null);
           }
        } catch(BadLocationException exc) {
           exc.printStackTrace();
        }
    }
    

    public Combat getCurrentCombat() {
        return currentCombat;
    }

    public void setCurrentCombat(Combat currentCombat) {
        this.currentCombat = currentCombat;
        
        allyPos = 0;
        enemyPos = 0;
        
        updateView();
    }
    
    public void updateView() {
        activeAlly = currentCombat.getAlly(allyPos);
        activeEnemy = currentCombat.getEnemy(enemyPos);
        
        if (activeAlly == null) {
            activeAlly = new CharacterStatus();
        }
        if (activeEnemy == null) {
            activeEnemy = new CharacterStatus();
        }
        
        allyName.setText(activeAlly.getName());
        enemyName.setText(activeEnemy.getName());
        
        allyHPLabel.setText("HP: " + activeAlly.getHP() + "/" + activeAlly.getMaxHP());
        enemyHPLabel.setText("HP: " + activeEnemy.getHP() + "/" + activeEnemy.getMaxHP());
        
        allyHPBar.setMaximum(activeAlly.getMaxHP());
        allyHPBar.setValue(activeAlly.getHP());
        enemyHPBar.setMaximum(activeEnemy.getMaxHP());
        enemyHPBar.setValue(activeEnemy.getHP());
        
        for (int i = 0; i < 4; i++) {
            Ability ab = activeAlly.getAbility(i);
            
            if (ab != null) {
                allyButtons.get(i).setText(ab.getName());
                allyButtons.get(i).setEnabled(true);
            } else {
                allyButtons.get(i).setText("—");
                allyButtons.get(i).setEnabled(false);
            }
        }
        
        for (int i = 0; i < 4; i++) {
            Ability ab = activeEnemy.getAbility(i);
            
            if (ab != null) {
                enemyButtons.get(i).setText(ab.getName());
                enemyButtons.get(i).setEnabled(true);
            } else {
                enemyButtons.get(i).setText("—");
                enemyButtons.get(i).setEnabled(false);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane Console;
    private javax.swing.JButton allyAbility0;
    private javax.swing.JButton allyAbility1;
    private javax.swing.JButton allyAbility2;
    private javax.swing.JButton allyAbility3;
    private javax.swing.JProgressBar allyHPBar;
    private javax.swing.JLabel allyHPLabel;
    private javax.swing.JLabel allyName;
    private javax.swing.JButton enemyAbility0;
    private javax.swing.JButton enemyAbility1;
    private javax.swing.JButton enemyAbility2;
    private javax.swing.JButton enemyAbility3;
    private javax.swing.JProgressBar enemyHPBar;
    private javax.swing.JLabel enemyHPLabel;
    private javax.swing.JLabel enemyName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
